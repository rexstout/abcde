TODO:
----
* flacdecode (to extract files from a -1 flac file) (ALMOST READY!)

* Get the echo instances to behave consistently

* read the TOC and CDTEXT files and store them

* read_and_encode_and_tag? :)
* Customizable post-read/encode/tag hooks
  (http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=114851)

* Separate local/dist tagging: if local encoding, the tags are added on the
  encoding phase. If remote, the tracks need tagging.
  And also add the possibility to add this information via oggenc directly
  instead of explicitly invoking vorbiscomment.

* Maybe repair files when they have the same name in the original CD?
  (http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=205634)

* Separate the different output encodings, so a user can read and encode one
  format and then encode another one, later, from the same wavs. Right now,
  the same status line is used for all formats, so a re-encoding is rejected
  since abcde sees the encoding already finished. Same with tags and moves.

* Support UTF-8 tags

* From slashdot: IMHO the most important aspect of an auto-ripper, is its
  error-handling: what happens if a CD is too scratched to rip? How should it
  react if someone tries to rip the exact same CD? make a new rip with another
  name ? silently overwrite the old rip? etc.

  Review the things that abcde does ;)

* When cdparanoia encounters a problem (disk full, data track) when abcde
  is run in batch mode, abcde still continues, but batch mode is disabled.
  I.e. instead of normalizing all tracks together, they are normalized
  seperately, instead of running "lame --nogap" on all wavs, lame is
  invoked once per wav.

  Abcde should halt when a problem occurs, so it can be manually resolved.

* AAC support (faac should be free?)

* I used abcde to rip a cd in batch normalizing mode to mp3 (mp2
  actually) format with toolame. The first part went fine, until toolame
  started. That resulted in an error. Here is the relevant part of the
  logfile made by 'abcde -D 2>logfile':

  -----
  + TRACKFILES= track1.wav track2.wav track3.wav track4.wav
  + nice -n 10 toolame --nogap track1.wav track2.wav track3.wav track4.wav
  toolame: unrec option -
  toolame: unrec option n
  toolame: -p model must be 1 or 2, not track1.wav
  + RETURN=1
  + '[' 1 '!=' 0 ']'
  + echo 'batch-encode:  returned code 1'
  -----
  
  In my abcde.conf I have "BATCH=y". Setting this to "BATCH=n" solves
  this. "BATCH=y" is responsible for inserting '--nogap'. I don't know
  what that is supposed to be doing, but it is only meant for use with
  lame, and I am using toolame as that is free software: "LAME=toolame"
  in abcde.conf.
  
  I see two possible solutions:
  
  1. Check if LAME really is lame and not toolame or some other mp3
  encoder. If so, then go ahead and insert '--nogap' in the generated
  command. Else don't.
  
  2. Don't tie the '--nogap' insertion to the setting of BATCH. Make a
  new option NOGAP or something for that.
  
  Other than that, abcde is a brilliant time saver. Thanks!
  
  BTW, dpkg -l toolame:
  ii  toolame        02i-2          MPEG-1 layer 2 audio encoder

*

abcde -a read,encode -o ogg,flac,wav (it creates and encodes the 3 formats)

abcde -a tag,move,clean (it tags and moves Ogg/Vorbis and erases everything
                        else...)

I will have to add a "-f" as force to erase the directory if we have encoded
something else than what we have already moved, so that we dont destroy
formats that we want to keep.

