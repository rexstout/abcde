--- abcde.orig	2004-11-21 14:42:50.000000000 -0600
+++ abcde	2004-11-22 10:38:11.000000000 -0600
@@ -42,7 +42,7 @@
 echo "-o <type1[,type2]...>"
 echo "       Output file type(s) (ogg,mp3,flac,spx,mpc). Defaults to ogg"
 echo "-p     Pad track numbers with 0's (if less than 10 tracks)"
-#echo "-P    Use UNIX pipes to read+encode without wav files"
+echo "-P    Use UNIX pipes to read+encode without wav files"
 echo "-r <host1[,host2]...>"
 echo "       Also encode on these remote hosts"
 echo "-R     Add replaygain values to the tag info (only for ogg,flac)"
@@ -415,21 +415,62 @@
 do_encode ()
 {
 	IN="$ABCDETEMPDIR/track$1.wav"
-	# We need IN to proceed.
-	if [ -s "$IN" ] ; then
+	if [ "$USEPIPES" = "y" ]; then
+		case "$OUTPUT" in
+			mp3)
+				TEMPARG="PIPE_$MP3ENCODERSYNTAX"
+				;;
+			ogg)
+				TEMPARG="PIPE_$OGGENCODERSYNTAX"
+				;;
+			flac)
+				TEMPARG="PIPE_$FLACENCODERSYNTAX"
+				;;
+			spx)
+				TEMPARG="PIPE_$SPEEXENCODER"
+				;;
+			mpc)
+				TEMPARG="PIPE_$MPPENCODER"
+				;;
+		esac
+		FILEARG=${!TEMPARG}
+	else
+		case "$OUTPUT" in
+			mp3)
+				case "$MP3ENCODERSYNTAX" in
+					mp3enc)
+						FILEARG="-if $IN"
+						;;
+					*)
+						FILEARG=$IN
+						;;
+				esac
+				;;
+			*)
+				FILEARG=$IN
+				;;
+		esac
+	fi
+	# We need IN to proceed, but only if we're not piping
+	if [ -s "$IN" -o "$USEPIPES" = "y" ] ; then
 		for OUTPUT in $(echo $OUTPUTTYPE | tr , \ )
 		do
 			OUT="$ABCDETEMPDIR/track$1.$OUTPUT"
 			run_command '' echo "Encoding track $1 of $TRACKS: $TRACKNAME..."
+			if [ "$USEPIPES" = "y" ]; then
+				RUNCOMMAND=""
+			else
+				RUNCOMMAND="run_command encodetrack-$OUTPUT-$1"
+			fi
 			case "$OUTPUT" in
 			mp3)
 				case "$2" in
 				%local*%)
 					case "$MP3ENCODERSYNTAX" in
-					lame|gogo) run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $MP3ENCODER $MP3ENCODEROPTS "$IN" "$OUT" ;;
-					bladeenc) run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $MP3ENCODER $MP3ENCODEROPTS -quit "$IN" ;;
-					l3enc|xingmp3enc) run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $MP3ENCODER "$IN" "$OUT" $MP3ENCODEROPTS ;;
-					mp3enc) run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $MP3ENCODER -if "$IN" -of "$OUT" $MP3ENCODEROPTS ;;
+					lame|gogo) $RUNCOMMAND nice $ENCNICE $MP3ENCODER $MP3ENCODEROPTS $FILEARG "$OUT";;
+					bladeenc) $RUNCOMMAND nice $ENCNICE $MP3ENCODER $MP3ENCODEROPTS -quit $FILEARG ;;
+					l3enc|xingmp3enc) $RUNCOMMAND nice $ENCNICE $MP3ENCODER $FILEARG "$OUT" $MP3ENCODEROPTS ;;
+					mp3enc) $RUNCOMMAND nice $ENCNICE $MP3ENCODER $FILEARG -of "$OUT" $MP3ENCODEROPTS ;;
 					esac
 					;;
 				*)
@@ -441,8 +482,8 @@
 				case "$2" in
 				%local*%)
 					case "$OGGENCODERSYNTAX" in
-					vorbize) run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $OGGENCODER $OGGENCODEROPTS -w "$OUT" "$IN" ;;
-					oggenc) run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $OGGENCODER $OGGENCODEROPTS -o "$OUT" "$IN" ;;
+					vorbize) $RUNCOMMAND nice $ENCNICE $OGGENCODER $OGGENCODEROPTS -w "$OUT" $FILEARG ;;
+					oggenc) $RUNCOMMAND nice $ENCNICE $OGGENCODER $OGGENCODEROPTS -o "$OUT" $FILEARG ;;
 					esac
 					;;
 				*)
@@ -454,7 +495,7 @@
 				case "$2" in
 	                        %local*%)
 					case "$FLACENCODERSYNTAX" in
-					flac) run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $FLACENCODER  $FLACENCODEROPTS -o "$OUT" "$IN" ;; 
+					flac) $RUNCOMMAND nice $ENCNICE $FLACENCODER  $FLACENCODEROPTS -o "$OUT" $FILEARG ;; 
 				        esac
 					;;
 	
@@ -475,9 +516,9 @@
 				fi
 				# Quick hack to avoid tagging Ogg/Speex, since there is no other way to tag than inline tagging
 				if [ ! "$DOTAG" = "y" ]; then
-					run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $SPEEXENCODER $SPEEXENCODEROPTS --author "$TRACKARTIST" --title "$TRACKNAME" "$COMMENT" "$IN" "$OUT"
+					$RUNCOMMAND nice $ENCNICE $SPEEXENCODER $SPEEXENCODEROPTS --author "$TRACKARTIST" --title "$TRACKNAME" "$COMMENT" $FILEARG "$OUT"
 				else
-					run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $SPEEXENCODER $SPEEXENCODEROPTS "$IN" "$OUT"
+					$RUNCOMMAND nice $ENCNICE $SPEEXENCODER $SPEEXENCODEROPTS $FILEARG "$OUT"
 				fi
 				;;
 			mpc)	
@@ -487,7 +528,7 @@
 				# errors, so I have not tried it myself.
 				## FIXME ## Needs some cleanup to determine if an empty tag sent
 				## FIXME ## to the encoder ends up empty.
-				run_command encodetrack-$OUTPUT-$1 nice $ENCNICE $MPPENCODER $MPPENCODEROPTS --artist "$TRACKARTIST" --album "$DALBUM" --title "$TRACKNAME" --track "$1" --genre "$CDGENRE" --year "$CDYEAR" --comment "$COMMENT" "$IN" "$OUT"
+				$RUNCOMMAND nice $ENCNICE $MPPENCODER $MPPENCODEROPTS --artist "$TRACKARTIST" --album "$DALBUM" --title "$TRACKNAME" --track "$1" --genre "$CDGENRE" --year "$CDYEAR" --comment "$COMMENT" $FILEARG "$OUT"
 				;;
 			esac
 		done
@@ -1575,15 +1616,29 @@
 	UTRACKNUM=$1
 	CDDBTRACKNUM=$(expr $UTRACKNUM - 1)
 	WAVDATA="$ABCDETEMPDIR/track$UTRACKNUM.wav"
-	OUTDATA="$ABCDETEMPDIR/track$UTRACKNUM.$OUTPUTTYPE"
 	if [ -r "$CDDBDATA" ]; then
 		TRACKNAME=$(grep ^TTITLE$CDDBTRACKNUM= "$CDDBDATA" | head -n 1 | cut -f2 -d= | tr -d \[:cntrl:\])
 		echo "Grabbing track $UTRACKNUM: $TRACKNAME..." >&2
 	else
 		echo "Grabbing track $UTRACKNUM..." >&2
 	fi
+	if [ "$USEPIPES" = "y" ]; then
+		TEMPARG="PIPE_$CDROMREADERSYNTAX"
+		FILEARG=${!TEMPARG}
+		REDIR=""
+	else
+		case "$CDROMREADERSYNTAX" in
+			dagrab)
+				FILEARG="-f $WAVDATA"
+				;;
+			*)
+				FILEARG=$WAVDATA
+				;;
+		esac
+		REDIR=">&2"
+	fi
 	case "$CDROMREADERSYNTAX" in
-		cdparanoia) nice $READNICE $CDROMREADER -d $CDROM $UTRACKNUM "$WAVDATA" >&2 ;;
+		cdparanoia) nice $READNICE $CDROMREADER -d $CDROM $UTRACKNUM $FILEARG $REDIR ;;
 		cdda2wav)
 			if [ "$OSFLAVOUR" = "OSX" ] ; then
 				# Hei, we have to unmount the device before running anything like cdda2wav in OSX
@@ -1599,9 +1654,9 @@
 					CDDA2WAVCDROM="$CDROMID"
 				fi
 			fi
-			nice $READNICE $CDROMREADER -D $CDDA2WAVCDROM -t $UTRACKNUM "$WAVDATA" >&2 
+			nice $READNICE $CDROMREADER -D $CDDA2WAVCDROM -t $UTRACKNUM $FILEARG $REDIR
 			;;
-		dagrab) nice $READNICE $CDROMREADER -d $CDROM -f $WAVDATA -v $UTRACKNUM >&2 ;;
+		dagrab) nice $READNICE $CDROMREADER -d $CDROM -v $UTRACKNUM $FILEARG $REDIR ;;
 		cddafs)
 			# Find the track's mounted path
 			REALTRACKNUM=$(expr $UTRACKNUM + 0)
@@ -1609,14 +1664,14 @@
 			FILEPATH=$(find "$FILEPATH" | grep "/$REALTRACKNUM ");
 			# If the file exists, copy it
 			if [ -e "$FILEPATH" ] ; then
-				nice $READNICE $CDROMREADER "$FILEPATH" "$WAVDATA" >&2
+				nice $READNICE $CDROMREADER "$FILEPATH" $FILEARG $REDIR
 			else
 				false
 			fi ;;
-		debug) nice $READNICE $CDROMREADER -d $CDROM -w $UTRACKNUM-[:1] "$WAVDATA" >&2 ;;
+		debug) nice $READNICE $CDROMREADER -d $CDROM -w $UTRACKNUM-[:1] $FILEARG $REDIR ;;
 	esac
 	RETURN=$?
-	if [ "$RETURN" != "0" -o ! -s "$WAVDATA" ]; then
+	if [ "$RETURN" != "0" -o \( ! -s "$WAVDATA" -a "$USEPIPES" != "y" \) ]; then
 		# Thank goodness errors is only machine-parseable up to the
 		# first colon, otherwise this woulda sucked
 		if [ "$RETURN" = "0" -a ! -s "$WAVDATA" ]; then
@@ -1864,7 +1919,7 @@
 
 # Parse command line options
 #while getopts 1a:bc:C:d:Dhj:klLnNo:pr:S:t:T:vVx opt ; do
-while getopts 1a:A:bc:C:d:Dhj:klLnNo:pr:Rs:S:t:T:vVxw:W: opt ; do
+while getopts 1a:A:bc:C:d:Dhj:klLnNo:pPr:Rs:S:t:T:vVxw:W: opt ; do
 	case "$opt" in
 		1) ONETRACK=y ;;
 		a) ACTIONS="$OPTARG" ;;
@@ -2136,6 +2191,37 @@
 	esac
 fi
 
+# Rippers which support USEPIPE
+PIPE_cdparanoia="-"
+
+# Encoders which support USEPIPE
+PIPE_lame="-"
+
+# Figure out if we know how to USEPIPES
+if [ "$USEPIPES" = "y" ] ; then
+	# ... can't NORMALIZE while doing this; general other sanity checks should happen
+	PIPERIPPERSVARCHECK="PIPE_${CDROMREADER}"
+	case "$OUTPUT" in
+		mp3)
+			PIPEENCODERSVARCHECK="PIPE_$MP3ENCODERSYNTAX" ;;
+		ogg)
+			PIPEENCODERSVARCHECK="PIPE_$OGGENCODERSYNTAX" ;;
+		flac)
+			PIPEENCODERSVARCHECK="PIPE_$FLACENCODERSYTNAX" ;;
+		spx)
+			PIPEENCODERSVARCHECK="PIPE_$SPEEXENCODER" ;;
+		mpc)
+			PIPEENCODERSVARCHECK="PIPE_$MPPENCODER" ;;
+	esac
+	if [ ! -n "${!PIPERIPPERSVARCHECK}" ] ; then
+		echo "abcde error: no support for pipes with given ripper" >&2
+		exit 1;
+	fi
+	if [ ! -n "${!PIPEENCODERSVARCHECK}" ] ; then
+		echo "abcde error: no support for pipes with given encoder" >&2
+		exit 1;
+	fi
+fi
 
 # Make sure a buncha things exist
 for X in $CDROMREADER $CDDISCID ${NEEDTAGGER+$TAGGER} $MP3ENCODER \
@@ -2267,7 +2353,11 @@
 	do
 		if [ "$DOREAD" = "y" ]; then
 			if checkstatus readtrack-$UTRACKNUM; then :; else
-				do_cdread $UTRACKNUM
+				if [ "$USEPIPES" = "y" ]; then
+					do_cdread $UTRACKNUM | do_encode $UTRACKNUM %local0%
+				else
+					do_cdread $UTRACKNUM
+				fi
 				if [ "$?" != "0" ]; then
 					# CD read failed - don't give the goahead to
 					# the encoder
@@ -2459,7 +2549,7 @@
 			if checkstatus normalizetrack-$UTRACKNUM; then :; else do_normalize $UTRACKNUM; fi
 		fi
 	fi
-	if [ "$DOENCODE" = "y" ]; then
+	if [ "$DOENCODE" = "y" -a "$USEPIPES" != "y" ]; then
 		if checkstatus readtrack-$UTRACKNUM; then
 			#if checkstatus encodetrack-$UTRACKNUM; then :; else do_encode $UTRACKNUM $LOCATION; fi
 			if [ "$DONORMALIZE" = "y" ]; then
